# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# # Uncomment the following line to change how often to auto-update (in days).
zstyle ':omz:update' frequency 180

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git git-extras vi-mode pip tmux virtualenv)

source $ZSH/oh-my-zsh.sh

###############################################################################
# Docker
###############################################################################


# Preffered docker stats output
function docker-stats() {
  docker stats --format "table {{.Name}}\t{{.ID}}\t{{.CPUPerc}}\t{{.MemUsage}}"
}

# Print total memory currently used by docker
function docker-memory() {
  docker stats --no-stream --format 'table {{.MemUsage}}' | sed 's/[A-Za-z]*//g' | awk '{sum += $1} END {print sum "MB"}'
}

###############################################################################
# Env
###############################################################################

# MacOS does not set these locale settings and they are needed for neomake to work properly
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_CTYPE="en_US.UTF-8"

# update the path before firing-up OMZ
# add local bin to the path if not already there
if [[ "$PATH" != *"$HOME/.bin"* ]]; then
    export PATH=$PATH:$HOME/.bin
fi

# turn off special handling of ._* files in tar, etc.
export COPYFILE_DISABLE=1

#allow tab completion in the middle of a word
setopt COMPLETE_IN_WORD
setopt CORRECT

# for sharing history between zsh processes
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
alias history='history 1'
WORDCHARS="${WORDCHARS:s#/#}"
WORDCHARS="${WORDCHARS:s#.#}"
# completion in the middle of a line
bindkey '^i' expand-or-complete-prefix
bindkey '^R' history-incremental-search-backward

# turn off annoying history verification, just run the damn command
setopt NO_HIST_VERIFY

# never ever beep ever. EVER
setopt NO_BEEP

# do not print error on non matched patterns
setopt NO_NO_MATCH

# use theme colors
export LS_COLORS=''

# Switch the terminal to 256 colors, but only if it's not in a tumux session
# (tmux uses screen-256colors which is set in its own configuration file)
if [[ -n "$DISPLAY" && "$TERM" == "xterm" ]]; then
  export TERM=xterm-256color
fi

# Occansionally the terminal will end up in a bad state as a result
# from interrupting PDB or some other process.
# Symptoms include: new line not working; backspace stops working; etc
alias fix-terminal="stty sane"

###############################################################################
# Git
###############################################################################

# Show a pretty graph of commit history
alias git-graph="git log --pretty=oneline --abbrev-commit --graph --decorate --all"

###############################################################################
# JavaScript
###############################################################################

# NPM - always prefer local modules (only alias if npm is actually installed)
if command -v npm &> /dev/null; then
    export PATH="node_modules/.bin:$PATH"
    export NODE_PATH="/usr/lib/node_modules"
fi

# Allow easy switching of Javascript versions
if command -v volta &> /dev/null; then
    export VOLTA_HOME=$HOME/.volta
    export PATH="$VOLTA_HOME/bin:$PATH"
fi

###############################################################################
# PHP
###############################################################################

if command -v composer &> /dev/null; then
    # include php composer binaries
    export PATH="$HOME/.composer/vendor/bin:$PATH"
fi

###############################################################################
# Python
###############################################################################

# Allow easy switching of Python versions
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"

    # Alias Homebrew becuase pyenv create additinal *-config files that confuse brew
    # https://github.com/pyenv/pyenv/issues/106
    if command -v brew &> /dev/null; then
        alias brew='env PATH=${PATH//$(pyenv root)\/shims:/} brew'
    fi
fi

# Ensure poetry can be found in linux
# https://python-poetry.org/docs/#installing-with-the-official-installer
export PATH="$HOME/.local/bin:$PATH"

###############################################################################
# RipGrep
###############################################################################

if command -v rg &> /dev/null; then
    export RIPGREP_CONFIG_PATH=$HOME/.ripgreprc
fi

###############################################################################
# Ruby
###############################################################################

# Ruby
if command -v ruby &> /dev/null && command -v gem &> /dev/null; then
    PATH="$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH"
fi

###############################################################################
# Tmux
###############################################################################

# Update SSH environment variables
#
# Tmux inherits environment settings when reattaching, but doesn't update
# existing panel's environments. So we must do this ourselves with this function
#
# See: https://stackoverflow.com/a/34683596

function fixssh() {
    eval $(tmux show-env -s |grep '^SSH_')
}

###############################################################################
# VIM
###############################################################################

# Neovim
if command -v nvim &> /dev/null; then
    alias vim="nvim"
    alias vi="nvim"

    # Ensure vim is the default editor
    export EDITOR=nvim
    export VISUAL=nvim
fi
